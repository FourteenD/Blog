(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{442:function(s,t,a){"use strict";a.r(t);var e=a(20),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[s._v("#")]),s._v(" 介绍")]),s._v(" "),a("p",[s._v("Docker 利用了 Linux 内核特性命名空间（namespace）及控制组（cgroups）等为容器提供隔离的运行环境。")]),s._v(" "),a("h2",{attrs:{id:"使用脚本快速启用-docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用脚本快速启用-docker"}},[s._v("#")]),s._v(" 使用脚本快速启用 Docker")]),s._v(" "),a("p",[s._v("在过去常常"),a("a",{attrs:{href:"https://docs.docker.com/engine/install/",target:"_blank",rel:"noopener noreferrer"}},[s._v("手动安装"),a("OutboundLink")],1),s._v("，现在已经完全切换为脚本形式了：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -fsSL https://get.docker.com -o get-docker.sh\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" get-docker.sh\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 替换源")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# sudo sh get-docker.sh --mirror Aliyun")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# sudo sh get-docker.sh --mirror AzureChinaCloud")]),s._v("\n")])])]),a("p",[s._v("如果担心脚本异常，可以下载并进行审核。")]),s._v(" "),a("p",[s._v("接着就可以开始愉快的使用了，例行习惯 Hello World：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("docker run hello-world\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出")]),s._v("\nHello from Docker"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\nThis message shows that your installation appears to be working correctly.\n\nTo generate this message, Docker took the following steps:\n "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(". The Docker client contacted the Docker daemon.\n "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(". The Docker daemon pulled the "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello-world"')]),s._v(" image from the Docker Hub.\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("amd64"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(". The Docker daemon created a new container from that image "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("which")]),s._v(" runs the\n    executable that produces the output you are currently reading.\n "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(". The Docker daemon streamed that output to the Docker client, "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("which")]),s._v(" sent it\n    to your terminal.\n\nTo try something "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("more")]),s._v(" ambitious, you can run an Ubuntu container with:\n $ docker run -it ubuntu "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\n\nShare images, automate workflows, and "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("more")]),s._v(" with a "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("free")]),s._v(" Docker ID:\n https://hub.docker.com/\n\nFor "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("more")]),s._v(" examples and ideas, visit:\n https://docs.docker.com/get-started/\n")])])]),a("h2",{attrs:{id:"初始化-docker-环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#初始化-docker-环境"}},[s._v("#")]),s._v(" 初始化 Docker 环境")]),s._v(" "),a("h3",{attrs:{id:"设置用户组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设置用户组"}},[s._v("#")]),s._v(" 设置用户组")]),s._v(" "),a("p",[s._v("为了避免每次使用 Docker 都需要切换到 "),a("code",[s._v("sudo")]),s._v("，可以将 "),a("code",[s._v("docker")]),s._v(" 加入当前用户。重新登录后生效。")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("groupadd")]),s._v(" docker\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("usermod")]),s._v(" -aG docker "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$USER")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# or")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("usermod")]),s._v(" -aG docker USER_NAME\n")])])]),a("h3",{attrs:{id:"镜像加速"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#镜像加速"}},[s._v("#")]),s._v(" 镜像加速")]),s._v(" "),a("p",[s._v("镜像服务可用：")]),s._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors",target:"_blank",rel:"noopener noreferrer"}},[s._v("阿里云镜像服务"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://www.163yun.com/help/documents/56918246390157312",target:"_blank",rel:"noopener noreferrer"}},[s._v("网易云镜像服务"),a("OutboundLink")],1)])]),s._v(" "),a("p",[s._v("修改本地的 "),a("code",[s._v("/etc/docker/daemon.json")]),s._v(" 并修改 "),a("code",[s._v("registry-mirrors")]),s._v("，可为其配置多个避免某个挂掉：")]),s._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"registry-mirrors"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"https://hub-mirror.c.163.com"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("h3",{attrs:{id:"修改存储路径"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改存储路径"}},[s._v("#")]),s._v(" 修改存储路径")]),s._v(" "),a("p",[s._v("通过 "),a("code",[s._v("docker info")]),s._v(" 可以看到默认路径为 "),a("code",[s._v("/var/lib/docker")]),s._v("，而一般服务器会额外挂载硬盘。")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 修改配置文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" /etc/docker/daemon.json\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 增加")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"data-root"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/path/to/docker"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重启 docker")]),s._v("\nsystemctl restart docker\n")])])]),a("p",[s._v("执行 "),a("code",[s._v("docker info")]),s._v(" 进行校验。")]),s._v(" "),a("h2",{attrs:{id:"热门镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#热门镜像"}},[s._v("#")]),s._v(" 热门镜像")]),s._v(" "),a("h3",{attrs:{id:"busybox"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#busybox"}},[s._v("#")]),s._v(" Busybox")]),s._v(" "),a("p",[s._v("以前常常会用 ubuntu 来测试一些命令行工具，现在有了更好的选择：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --rm 用完即删")]),s._v("\ndocker run -it --rm busybox\n")])])]),a("h3",{attrs:{id:"node-js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node-js"}},[s._v("#")]),s._v(" Node.js")]),s._v(" "),a("p",[s._v("从这里基本就可以了解到这些镜像只是在 Docker Engine 上增加了一些依赖，然后你又基于这些依赖搭建你的环境，可以看看 "),a("a",{attrs:{href:"https://hub.docker.com/layers/node/library/node/erbium-buster-slim/images/sha256-c6ad96c5345c1a714e0052d08d83635c8e422ea0d103adc7f9f2df4fcfb7fe2d?context=explore",target:"_blank",rel:"noopener noreferrer"}},[s._v("Node Images Layers"),a("OutboundLink")],1),s._v(" 加深该概念。")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 追加 bash，否则会直接进入 node")]),s._v("\ndocker run -it --rm node:slim "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\n")])])]),a("h3",{attrs:{id:"nginx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx"}},[s._v("#")]),s._v(" Nginx")]),s._v(" "),a("p",[s._v("快速测试本地打包好的静态文件。")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("docker run --rm "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\t-p "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v(":80 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\t-v /dir/dist/:/usr/share/nginx/html "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\tnginx\n")])])]),a("h3",{attrs:{id:"mysql"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql"}},[s._v("#")]),s._v(" MySQL")]),s._v(" "),a("p",[s._v("指定密码。")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("docker run --rm "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\t-p "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("33006")]),s._v(":3306 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\t-e "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("MYSQL_ROOT_PASSWORD")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("mypasswd "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  mysql\n")])])]),a("h3",{attrs:{id:"mongo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mongo"}},[s._v("#")]),s._v(" Mongo")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("docker run -d "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\t-p "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("27017")]),s._v(":27017 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  --name some-mongo "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  mongo --auth\n")])])]),a("h3",{attrs:{id:"redis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis"}},[s._v("#")]),s._v(" Redis")]),s._v(" "),a("p",[s._v("指定密码。")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("docker run -d "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\t-p "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),s._v(":6379 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\t--name some-redis "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\tredis --requirepass "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"redispwd"')]),s._v("\n")])])]),a("h2",{attrs:{id:"移除-docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#移除-docker"}},[s._v("#")]),s._v(" 移除 Docker")]),s._v(" "),a("p",[s._v("如果在之前修改了存储路径，则根据当前情况进行修改。")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Ubuntu")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" purge docker-ce docker-ce-cli containerd.io\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# CentOS")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum remove docker-ce docker-ce-cli containerd.io\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 还有 images、containers、volumes、and configurations")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -rf /var/lib/docker\n")])])]),a("h2",{attrs:{id:"参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[s._v("#")]),s._v(" 参考资料")]),s._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"https://docs.docker.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Docker"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://docs.docker.com/engine/reference/commandline/docker/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Docker Commands"),a("OutboundLink")],1)]),s._v(" "),a("li",[s._v("《Docker 技术入门与实战（第三版）》")]),s._v(" "),a("li",[s._v("《自己动手写 Docker》")])])])}),[],!1,null,null,null);t.default=n.exports}}]);